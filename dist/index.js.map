{"version":3,"sources":["../index.js"],"names":["create","keyRegex","specialFields","dbWrapper","from","collection","callback","col","db","arguments","length","isNotEqualOp","op","endsWith","translateField","field","translateValue","value","String","queryable","orderBy","whereAnd","whereOr","limit","count","bind","q","Object","keys","reduce","key","exec","where","forEach","or","conditions","condition","replace","Array","entries","map","entry","push","notEqualOp","call","assign","fields","get","options","Promise","resolve","reject","promises","order","all","then","docs","results","some","result","doc","id","values","set","data","multipleDocData","removeAll","ref","delete","newSpecialFields"],"mappings":"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","file":"index.js","sourcesContent":["const keyRegex = /^([^<>=]+)(<|>|<=|>=|==|=)?/;\r\nconst specialFields = {\r\n  '@id': '__name__'\r\n};\r\n\r\nconst dbWrapper = db => {\r\n  return {\r\n    from(collection, callback) {\r\n      const col = create(db.collection(collection));\r\n      if (arguments.length < 2) {\r\n        return col;\r\n      }\r\n      callback(col);\r\n      return this;\r\n    }\r\n  };\r\n};\r\n\r\nconst isNotEqualOp = op => {\r\n  return op.endsWith('<>') || op.endsWith('!=') || op.endsWith('!==');\r\n};\r\n\r\nconst translateField = field => specialFields[field] || field;\r\nconst translateValue = (field, value) =>\r\n  field === '@id' ? String(value) : value;\r\n\r\nexport default function create(queryable, collection) {\r\n  if (queryable.collection) {\r\n    if (collection) {\r\n      queryable = queryable.collection(collection);\r\n    } else {\r\n      return dbWrapper(queryable);\r\n    }\r\n  }\r\n  const orderBy = [];\r\n  const whereAnd = {};\r\n  const whereOr = [];\r\n  let limit = 0;\r\n  return {\r\n    limit(count) {\r\n      limit = count;\r\n      return this;\r\n    },\r\n    bind(callback) {\r\n      let q = Object.keys(whereAnd).reduce((queryable, key) => {\r\n        const [, field, op = '='] = keyRegex.exec(key);\r\n        const value = whereAnd[key];\r\n        return queryable.where(\r\n          translateField(field),\r\n          op === '=' ? '==' : op,\r\n          translateValue(field, value)\r\n        );\r\n      }, queryable);\r\n\r\n      if (whereOr.length) {\r\n        whereOr.forEach(or => {\r\n          create(q)\r\n            .where(or)\r\n            .bind(callback);\r\n        });\r\n      } else {\r\n        callback(q);\r\n      }\r\n    },\r\n    where(...conditions) {\r\n      conditions.forEach(condition => {\r\n        Object.keys(condition).forEach(key => {\r\n          let value = condition[key];\r\n          key = key.replace(/\\s+/g, '');\r\n          if (key === 'or') {\r\n            if (!(value instanceof Array)) {\r\n              value = Object.entries(value).map(entry => ({\r\n                [entry[0]]: entry[1]\r\n              }));\r\n            }\r\n            whereOr.push(...value);\r\n          } else {\r\n            const notEqualOp = isNotEqualOp(key);\r\n\r\n            if (value instanceof Array) {\r\n              if (notEqualOp) {\r\n                // process not in operator\r\n              } else {\r\n                whereOr.push(\r\n                  ...[].map.call(value, value => ({ [key]: value }))\r\n                );\r\n              }\r\n            } else {\r\n              if (notEqualOp) {\r\n                const [, field] = keyRegex.exec(key);\r\n                whereOr.push(\r\n                  { [field + '<']: value },\r\n                  { [field + '>']: value }\r\n                );\r\n              } else {\r\n                Object.assign(whereAnd, { [key]: value });\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n      return this;\r\n    },\r\n    orderBy(fields) {\r\n      Object.keys(fields).forEach(field =>\r\n        orderBy.push([field, fields[field]])\r\n      );\r\n      return this;\r\n    },\r\n    get: function get(options) {\r\n      return new Promise((resolve, reject) => {\r\n        const promises = [];\r\n        this.bind(queryable => {\r\n          if (limit) {\r\n            queryable = queryable.limit(limit);\r\n          }\r\n          if (orderBy.length) {\r\n            queryable = orderBy.reduce(\r\n              (queryable, order) => queryable.orderBy(...order),\r\n              queryable\r\n            );\r\n          }\r\n          promises.push(queryable.get(options));\r\n        });\r\n\r\n        Promise.all(promises).then(results => {\r\n          const docs = {};\r\n          let count = 0;\r\n          results.some(result => {\r\n            result.forEach(doc => {\r\n              if (limit && count >= limit) return;\r\n              if (!(doc.id in docs)) {\r\n                count++;\r\n              }\r\n              docs[doc.id] = doc;\r\n            });\r\n            return limit && count >= limit;\r\n          });\r\n          resolve(Object.values(docs));\r\n        }, reject);\r\n      });\r\n    },\r\n    set(id, data) {\r\n      // create multiple document\r\n      if (arguments.length === 1) {\r\n        const multipleDocData = id;\r\n        return Promise.all(\r\n          Object.keys(multipleDocData).map(id =>\r\n            queryable.doc(String(id)).set(multipleDocData[id])\r\n          )\r\n        );\r\n      }\r\n      return queryable.doc(String(id)).set(data);\r\n    },\r\n    removeAll() {\r\n      this.get().then(docs => {\r\n        return Promise.all(\r\n          docs.map(doc => {\r\n            return doc.ref.delete();\r\n          })\r\n        );\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nObject.assign(create, {\r\n  fields(newSpecialFields) {\r\n    Object.assign(specialFields, newSpecialFields);\r\n    return this;\r\n  }\r\n});\r\n"]}